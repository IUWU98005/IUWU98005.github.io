[{"content":"基于 LangChain 的智能体 - Dota2 玩家比赛行为锐评 项目概述 本项目是一个基于 LangChain 框架开发的智能体系统，专门用于分析和评价 Dota2 玩家在特定比赛中的表现。系统通过调用 STRATZ API 获取玩家比赛数据，并利用大语言模型对玩家的游戏表现进行专业、犀利的分析和评价。 项目地址：https://github.com/IUWU98005/dota2-player-review\n技术架构 核心技术栈 LangChain : 智能体框架和工具链 LangGraph : 用于创建 ReAct 智能体 OpenAI API : 大语言模型服务（支持智谱 GLM-4-Flash） DeepSeek API : 用于生成玩家表现评价 STRATZ API : Dota2 比赛数据源 CloudScraper : 处理反爬虫机制 项目结构 dota2-player-review/ ├── .gitignore # Git 忽略文件配置 ├── agent.py # LangChain 智能体核心模块 ├── analysis.py # 玩家表现分析模块 └── stratz.py # STRATZ API 数据获取工具 核心模块详解 1. 智能体模块 (agent.py) agent.py 是项目的核心智能体模块，主要功能包括：\nimport os from langchain.tools import tool from langchain_core.messages import HumanMessage from langchain_openai import ChatOpenAI from langchain_community.tools import DuckDuckGoSearchRun from langgraph.prebuilt import create_react_agent from dotenv import load_dotenv from stratz import get_player_data # 模型配置 model = ChatOpenAI( model=\u0026#34;glm-4-flash\u0026#34;, openai_api_base = \u0026#34;https://open.bigmodel.cn/api/paas/v4\u0026#34;, api_key=os.getenv(\u0026#34;OPENAI_API_KEY\u0026#34;), ) # 工具集成 tools = [DuckDuckGoSearchRun(), get_player_data] # 手动智能体函数 def manual_agent(content: str, model: ChatOpenAI, tools: list[tool]) -\u0026gt; dict: agent = create_react_agent(model, tools) resp = agent.invoke({\u0026#34;messages\u0026#34;: [HumanMessage(content)]}) return resp 特性：\n集成智谱 GLM-4-Flash 模型 支持 DuckDuckGo 搜索工具 集成自定义的 Dota2 数据获取工具 使用 LangGraph 的 ReAct 智能体架构 2. 数据获取模块 (stratz.py) stratz.py 负责从 STRATZ API 获取 Dota2 比赛数据：\n@tool def get_player_data(steam_id: int, match_id: int): \u0026#34;\u0026#34;\u0026#34; 获取玩家在指定比赛中的数据 :param steam_id: 玩家的 steam id :param match_id: 比赛 id :return: 包含玩家数据的字典 \u0026#34;\u0026#34;\u0026#34; # GraphQL 查询 query = \u0026#34;\u0026#34;\u0026#34; query GetRecentMatches($id: Long!, $steamAccountId: Long!){ match(id: $id) { durationSeconds players(steamAccountId: $steamAccountId) { playerSlot kills deaths assists networth numLastHits numDenies level heroDamage towerDamage heroHealing } } } \u0026#34;\u0026#34;\u0026#34; 功能特点：\n使用 @tool 装饰器集成到 LangChain 工具链 通过 GraphQL 查询获取详细的比赛数据 使用 CloudScraper 绕过反爬虫机制 获取包括 KDA、经济、伤害等关键指标 3. 分析评价模块 (analysis.py) analysis.py 实现玩家表现的智能分析：\ndef review_player(steam_id: int, match_id: int): player_data = stratz.get_player_data(steam_id, match_id) # 构建分析提示词 prompt = f\u0026#34;\u0026#34;\u0026#34; 请根据以下Dota2比赛数据, 专业、犀利地评价该玩家的表现, 指出优点和不足, 并给出改进建议： - 击杀: {player[\u0026#39;kills\u0026#39;]} - 死亡: {player[\u0026#39;deaths\u0026#39;]} - 助攻: {player[\u0026#39;assists\u0026#39;]} - 补刀: {player[\u0026#39;numLastHits\u0026#39;]} - 反补: {player[\u0026#39;numDenies\u0026#39;]} - 等级: {player[\u0026#39;level\u0026#39;]} - 净资产: {player[\u0026#39;networth\u0026#39;]} - 英雄伤害: {player[\u0026#39;heroDamage\u0026#39;]} - 建筑伤害: {player[\u0026#39;towerDamage\u0026#39;]} - 治疗量: {player[\u0026#39;heroHealing\u0026#39;]} - 比赛时长: {match[\u0026#39;durationSeconds\u0026#39;]//60}分{match[\u0026#39;durationSeconds\u0026#39;]%60}秒 \u0026#34;\u0026#34;\u0026#34; # 调用 DeepSeek API 生成评价 # ... API 调用逻辑 核心功能：\n整合比赛数据生成结构化分析提示 调用 DeepSeek API 进行智能分析 提供专业的游戏表现评价和改进建议 数据指标体系 系统分析的核心数据指标包括：\n战斗表现 KDA : 击杀(kills)、死亡(deaths)、助攻(assists) 伤害输出 : 英雄伤害(heroDamage)、建筑伤害(towerDamage) 支援能力 : 治疗量(heroHealing) 经济发展 补刀效率 : 正补(numLastHits)、反补(numDenies) 经济状况 : 净资产(networth)、等级(level) 时间维度 比赛时长 : 用于计算效率指标 发育节奏 : 结合时长分析经济和等级发展 环境配置 必需的环境变量 # .env 文件配置 OPENAI_API_KEY=your_zhipu_api_key DEEPSEEK_API_KEY=your_deepseek_api_key STRATZ_API_KEY=your_stratz_api_key STEAM_ACCOUNT_ID=your_steam_id MATCH_ID=target_match_id 依赖安装\npip install langchain langchain-openai langchain-community pip install langgraph python-dotenv cloudscraper requests 使用方式 1. 直接分析模式 from analysis import review_player import os steam_id = int(os.getenv(\u0026#34;STEAM_ACCOUNT_ID\u0026#34;)) match_id = int(os.getenv(\u0026#34;MATCH_ID\u0026#34;)) review = review_player(steam_id, match_id) print(\u0026#34;AI锐评:\u0026#34;, review) 智能体交互模式 from agent import manual_agent, model, tools query = \u0026#34;分析玩家 123456789 在比赛 7891234567 中的表现\u0026#34; response = manual_agent(query, model, tools) print(response) 技术亮点 1. 智能体架构设计 采用 LangGraph 的 ReAct 模式，支持推理-行动-观察循环 工具链集成，支持搜索和数据获取的组合使用 模块化设计，易于扩展新的分析工具 2. 多模型集成 智谱 GLM-4-Flash: 用于智能体推理和工具调用 DeepSeek: 专门用于生成专业的游戏分析评价 模型选择针对不同任务进行优化 3. 数据获取优化 使用 CloudScraper 处理反爬虫机制 GraphQL 查询精确获取所需数据字段 错误处理和数据验证机制 扩展方向 1. 功能扩展 支持多场比赛的综合分析 添加英雄特定的评价标准 集成更多游戏数据源（如 OpenDota） 2. 分析深度 引入机器学习模型进行表现预测 添加与职业选手的对比分析 实现团队配合度分析 3. 用户体验 开发 Web 界面 支持批量分析和报告生成 添加可视化图表展示 总结 本项目展示了如何使用 LangChain 框架构建专业的游戏数据分析智能体。通过整合多个 API 服务和大语言模型，实现了从数据获取到智能分析的完整流程。项目架构清晰，模块化程度高，为游戏数据分析领域的 AI 应用提供了良好的参考实现。\n该系统不仅能够提供客观的数据分析，还能生成具有专业性和针对性的改进建议，为 Dota2 玩家的技能提升提供了有价值的工具支持。\n","permalink":"https://iuwu98005.github.io/posts/250724-ai-agent/","summary":"\u003ch1 id=\"基于-langchain-的智能体---dota2-玩家比赛行为锐评\"\u003e基于 LangChain 的智能体 - Dota2 玩家比赛行为锐评\u003c/h1\u003e\n\u003ch2 id=\"项目概述\"\u003e项目概述\u003c/h2\u003e\n\u003cp\u003e本项目是一个基于 LangChain 框架开发的智能体系统，专门用于分析和评价 Dota2 玩家在特定比赛中的表现。系统通过调用 STRATZ API 获取玩家比赛数据，并利用大语言模型对玩家的游戏表现进行专业、犀利的分析和评价。\n项目地址：https://github.com/IUWU98005/dota2-player-review\u003c/p\u003e\n\u003ch2 id=\"技术架构\"\u003e技术架构\u003c/h2\u003e\n\u003ch3 id=\"核心技术栈\"\u003e核心技术栈\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLangChain : 智能体框架和工具链\u003c/li\u003e\n\u003cli\u003eLangGraph : 用于创建 ReAct 智能体\u003c/li\u003e\n\u003cli\u003eOpenAI API : 大语言模型服务（支持智谱 GLM-4-Flash）\u003c/li\u003e\n\u003cli\u003eDeepSeek API : 用于生成玩家表现评价\u003c/li\u003e\n\u003cli\u003eSTRATZ API : Dota2 比赛数据源\u003c/li\u003e\n\u003cli\u003eCloudScraper : 处理反爬虫机制\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"项目结构\"\u003e项目结构\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edota2-player-review/\n├── .gitignore          # Git 忽略文件配置\n├── agent.py            # LangChain 智能体核心模块\n├── analysis.py         # 玩家表现分析模块\n└── stratz.py          # STRATZ API 数据获取工具\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"核心模块详解\"\u003e核心模块详解\u003c/h2\u003e\n\u003ch3 id=\"1-智能体模块-agentpy\"\u003e1. 智能体模块 (agent.py)\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eagent.py\u003c/code\u003e 是项目的核心智能体模块，主要功能包括：\u003c/p\u003e","title":"基于 LangChain 的智能体 - Dota2 玩家比赛行为锐评"},{"content":"GitFlow 是什么? GitFlow 简单来说, 就是使用 git 进行版本控制的一套规范.\n根据 GitFlow 的建议, 主要的分支分为 master, hotfix, dev, release 和 feat 这 5 种分支.\n下图来自 why-need-git-flow:\nmaster : 主干分支, 用于正式发布的分支, 需要由专人严格审核测试后的 release / hotfix 分支才可以合并到该分支.\nhotfix : 用于热修复, 当 master 出现紧急 bug 时, 就需要基于 master 临时创建一个分支进行修复, 修复测试完成后, 合并到 master 和 dev 分支, 修复完成后删除 hotfix 分支.\ndev : 开发分支, 在 master 分支基础上创建而来, 是功能开发的基础分支. 一般不可在这条分支上直接开发, 需要新建一个 feat 分支, 再进行开发.\nfeat: 功能分支, 基于 master 分支, 不同的开发人员负责不同的 feat 分支, 开发测试完成后, 提交 PR(Pull Request) 到 remote, 由专人审核, 审核通过后合并到 dev 分支.\nrelease: 预发布分支, 当 dev 分支积累了一定的功能后, 会基于 dev 新建一个 release 分支, 用于完成正式发布前的准备工作, 通过测试后, 最终会合并回 master 和 dev 分支\nGitFlow 提交信息规范 表示提交类型，常用的有：\nfeat: 新功能 fix: 修复问题 docs: 文档修改 style: 代码格式修改（不影响代码运行的变动） refactor: 代码重构（既不是新增功能，也不是修复bug） test: 添加或修改测试代码 chore: 构建过程或工具的变动 perf: 性能优化 ci: 持续集成 build: 影响构建系统或外部依赖项的更改\ngit 相较于其他版本管理工具的优缺点 优点 分布式架构\n每个开发者都有完整的仓库副本(含历史记录) ,不依赖中央服务器即可提交和查看历史.\n优势：离线操作、高可用性、更快的本地操作\n分支管理强大\n分支轻量、快速,支持多人并行开发、CI/CD流程.\n合并(merge/rebase) 工具成熟,利于团队协作.\nGit Flow / trunk-based development 等都以 Git 为基础.\n速度快\n大多数操作(如 diff、log、commit) 都是在本地进行,不需要联网访问远程服务器.\n对于大项目也具有优秀的性能表现.\n数据完整性高\n每个提交通过 SHA-1 哈希校验,防篡改能力强.\n历史记录不可随意修改(除非有意如 rebase) .\n缺点 不适合处理大二进制文件\nGit 本质是为代码服务的文本型系统,大文件(如图片、音视频、模型等) 管理困难.\n虽然有 Git LFS(Large File Storage) 方案,但配置和使用略复杂.\n仓库膨胀风险\n因为每个用户本地都有完整仓库副本,历史记录多时体积变大,clone 较慢.\n操作自由,导致误操作风险高\n如 force push、rebase 不当使用可能覆盖历史.\nSVN 中则较少发生这种情况(更受控) .\ngit 提交时, 如果出现冲突该如何解决 首先使用 git pull 命令, 将 remote 的代码拉取到本地. 编译器一般会弹出窗口提示用户手动解决冲突 merge 在解决冲突的时候, 手动编辑需要保留的最终版本 解决完所有冲突并commit后, 再将本地代码 push 到 remote 上 在 gitlab 或者 github 上提交 pull request, 请求将 feat 分支合并到 dev ","permalink":"https://iuwu98005.github.io/posts/250703_gitflow/","summary":"\u003ch2 id=\"gitflow-是什么\"\u003eGitFlow 是什么?\u003c/h2\u003e\n\u003cp\u003eGitFlow 简单来说, 就是使用 git 进行版本控制的一套规范.\u003c/p\u003e\n\u003cp\u003e根据 GitFlow 的建议, 主要的分支分为 \u003ccode\u003emaster\u003c/code\u003e, \u003ccode\u003ehotfix\u003c/code\u003e, \u003ccode\u003edev\u003c/code\u003e, \u003ccode\u003erelease\u003c/code\u003e 和 \u003ccode\u003efeat\u003c/code\u003e 这 5 种分支.\u003c/p\u003e\n\u003cp\u003e下图来自 \u003ccode\u003ewhy-need-git-flow\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"image.png\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003emaster\u003c/code\u003e : 主干分支, 用于正式发布的分支, 需要由专人严格审核测试后的 \u003ccode\u003erelease\u003c/code\u003e / \u003ccode\u003ehotfix\u003c/code\u003e 分支才可以合并到该分支.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ehotfix\u003c/code\u003e : 用于热修复, 当 \u003ccode\u003emaster\u003c/code\u003e 出现紧急 bug 时, 就需要基于 \u003ccode\u003emaster\u003c/code\u003e 临时创建一个分支进行修复, 修复测试完成后, 合并到 \u003ccode\u003emaster\u003c/code\u003e 和 \u003ccode\u003edev\u003c/code\u003e 分支, 修复完成后删除 \u003ccode\u003ehotfix\u003c/code\u003e 分支.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003edev\u003c/code\u003e : 开发分支, 在 \u003ccode\u003emaster\u003c/code\u003e 分支基础上创建而来, 是功能开发的基础分支. 一般不可在这条分支上直接开发, 需要新建一个 \u003ccode\u003efeat\u003c/code\u003e 分支, 再进行开发.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003efeat\u003c/code\u003e: 功能分支, 基于 \u003ccode\u003emaster\u003c/code\u003e 分支, 不同的开发人员负责不同的 \u003ccode\u003efeat\u003c/code\u003e 分支, 开发测试完成后, 提交 \u003ccode\u003ePR(Pull Request)\u003c/code\u003e 到 remote, 由专人审核, 审核通过后合并到 \u003ccode\u003edev\u003c/code\u003e 分支.\u003c/p\u003e","title":"Git 学习记录"},{"content":"Pandas的安装与导入 在终端输入以下指令安装 pandas 库\npip install pandas 如果是使用 vscode 进行开发, 你可能需要额外安装 openpyxl 库:\npip install openpyxl 安装完成后在代码中导入:\nimport pandas as pd Pandas 读取数据的方式 Pandas 主要通过以下三种方式从不同来源读取数据:\npd.read_csv() pd.read_excel() pd.read_sql() Pandas 的数据类型 Pandas 的数据类型有 DataFrame 和 Series 一般来说, 查询单行或者单列的数据, 返回的结果为 Series 查询多行多列的数据, 返回的结果为 DataFrame\nPandas 查询数据的方式 Pandas 查询数据的 5 种方式: 1. df.loc 2. df.iloc 3. df.where 4. df.query. 在这几种方法中, df.loc 可以兼顾查询和覆写的功能, 具体使用方法如下:\ndf = pd.read_csv(your_csv_path) df.loc[:, \u0026#34;[column1]\u0026#34;] = df[\u0026#34;column1\u0026#34;].str.replace(\u0026#34;origin_str_part\u0026#34;, \u0026#34;target_str_part\u0026#34;) 上面这段代码的效果是, 查询 column1 这一整列(: 表示查询所有行), 同时将该行的 origin_str_part 全部替换为 target_str_part.\n你可以通过指定 index 和 column 来查询某一行或者某一列的数据:\n# 查询 index=5 的 column1, column2 下的数据, 返回 `pandas.series` series_query = df.loc[5, [\u0026#34;column1\u0026#34;, \u0026#34;column2\u0026#34;]] # 查询 index=1和5 的 column1, column2 下的数据, 返回的是 `pandas.dataframe` dataframe_query = df.loc[[1,5], [\u0026#34;column1\u0026#34;, \u0026#34;column2\u0026#34;]] 通过切片的方式进行查询 你也可以通过类似 Python 中切片的方式来进行取段的操作:\nPandas 的切片与 Python中的切片有些许差别, 主要是不去尾, 也就是 index=5和 \u0026quot;column\u0026quot; 也在数据查询的范围内\ndf.loc[[1:5], [\u0026#34;column1\u0026#34;: \u0026#34;column5\u0026#34;]] 使用条件表达式查询 loc 方法还可以与条件表达式相结合进行查询, 具体使用方法如下:\ndf.loc[df[\u0026#34;column\u0026#34;]\u0026lt;10, :] 上述代码实现的是返回 column 数值小于 10 的列表.\ndf[\u0026quot;column\u0026quot;]\u0026lt;10 返回的是所有索引和是否符合条件查询的结果 true or false\n你会看到以下类似的结果:\nindex1 false index2 false ... index10 true index11 true ... 你还可以通过 \u0026amp; 和 | 关键字进行组合查询.\n","permalink":"https://iuwu98005.github.io/posts/250702_pandas/","summary":"\u003ch2 id=\"pandas的安装与导入\"\u003ePandas的安装与导入\u003c/h2\u003e\n\u003cp\u003e在终端输入以下指令安装 \u003ccode\u003epandas\u003c/code\u003e 库\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epip install pandas\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果是使用 \u003ccode\u003evscode\u003c/code\u003e 进行开发, 你可能需要额外安装 \u003ccode\u003eopenpyxl\u003c/code\u003e 库:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epip install openpyxl \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e安装完成后在代码中导入:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e pandas \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e pd\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"pandas-读取数据的方式\"\u003ePandas 读取数据的方式\u003c/h2\u003e\n\u003cp\u003ePandas 主要通过以下三种方式从不同来源读取数据:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003epd.read_csv()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epd.read_excel()\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epd.read_sql()\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"pandas-的数据类型\"\u003ePandas 的数据类型\u003c/h2\u003e\n\u003cp\u003ePandas 的数据类型有 \u003ccode\u003eDataFrame\u003c/code\u003e 和 \u003ccode\u003eSeries\u003c/code\u003e\n一般来说, 查询单行或者单列的数据, 返回的结果为 Series\n查询多行多列的数据, 返回的结果为 DataFrame\u003c/p\u003e\n\u003ch2 id=\"pandas-查询数据的方式\"\u003ePandas 查询数据的方式\u003c/h2\u003e\n\u003cp\u003ePandas 查询数据的 5 种方式: 1. \u003ccode\u003edf.loc\u003c/code\u003e 2. \u003ccode\u003edf.iloc\u003c/code\u003e 3. \u003ccode\u003edf.where\u003c/code\u003e 4. \u003ccode\u003edf.query\u003c/code\u003e.\n在这几种方法中, \u003ccode\u003edf.loc\u003c/code\u003e 可以兼顾查询和覆写的功能, 具体使用方法如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edf \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e pd\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eread_csv(your_csv_path)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edf\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eloc[:, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;[column1]\u0026#34;\u003c/span\u003e] \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e df[\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;column1\u0026#34;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003estr\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ereplace(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;origin_str_part\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;target_str_part\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面这段代码的效果是, 查询 column1 这一整列(\u003ccode\u003e:\u003c/code\u003e 表示查询所有行), 同时将该行的 \u003ccode\u003eorigin_str_part\u003c/code\u003e 全部替换为 \u003ccode\u003etarget_str_part\u003c/code\u003e.\u003c/p\u003e","title":"Pandas Tutorial"},{"content":"基本概念 多任务中的并发和并行\n并发: 一段时间内交替执行任务 并行: 一段时间内同时执行多个任务 进程 python 中可以通过多进程来实现多任务.\n进程的概念 进程 (Process) 是操作系统资源分配和调度的基本单位.\n# main.py def foo1():... def foo2():... foo1() foo2() 在运行 .py 文件时, 操作系统会创建一个进程, 依次运行 foo1 和 foo2 两个方法.\n多进程 main.py 运行后会创建一个进程, 此时如果再次创建一个进程, 即为子进程. 我们让主进程运行 foo1, 让子进程来运行 foo2即可提升代码运行的效率.\n进程的创建步骤 1.导入进程包\nimport multiprocessing 2.创建进程对象\nmp = multiprocessing.Process() Process() 方法主要有3个参数:\ntarget: 执行的目标函数名(方法名), 如 foo2 name: 进程名, 一般不用设置 group: 进程组, 当前为 None 3.启动进程\nmp.start() 进程执行带有参数的任务 args 以元组方式传参 kwargs 以字典方式传参 def foo1(argument:int):... def foo2(argument:int):... foo1_process = multiprocessing.Process(target=foo1, args=(3,)) foo1_process.start() foo2_process = multiprocessing.Process(target=foo2, kwargs={\u0026#34;argument\u0026#34;, 3}) foo2_process.start() 获取进程编号 当程序进程数量越来越多时, 为了更好地对进程进行管理, 就需要知道每个进程的编号\n获取当前进程编号\nimport os os.getpid() 获取当前父进程编号\nimport os os.getppid() 在方法运行后获取 pid:\ndef foo1(argument:int): # func print(f\u0026#34;foo1 pid: {os.getpid()}\u0026#34;) def foo2(argument:int): # func print(f\u0026#34;foo2 pid: {os.getpid()}\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: # 1. 创建子进程对象并指定任务名 foo1_process = multiprocessing.Process(target=foo1, args=(3,)) foo2_process = multiprocessing.Process(target=foo2, kwargs={\u0026#34;argument\u0026#34;, 3}) # 2. 启动子进程并执行任务 foo1_process.start() foo2_process.start() 进程的注意点 主进程会等待所有子进程执行完成结束再结束.\ndef foo1(): for i in range(10): print(\u0026#34;子进程运行中...\u0026#34;) time.sleep(0.2) print(\u0026#34;子进程执行完毕\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: ps = multiprocessing.Process(target=foo1) ps.start() time.sleep(0.5) print(\u0026#34;主进程执行完毕\u0026#34;) 如何实现主进程结束, 所有子进程也结束 设置守护主进程: ps.daemon = True\ndef foo1(): for i in range(10): print(\u0026#34;子进程运行中...\u0026#34;) time.sleep(0.2) print(\u0026#34;子进程执行完毕\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: ps = multiprocessing.Process(target=foo1) # 设置守护主进程, 主进程推出后子进程自动销毁, 不再执行子进程中的代码 ps.daemon = True ps.start() time.sleep(0.5) print(\u0026#34;主进程执行完毕\u0026#34;) 结合实际案例 如何实现多进程实现拷贝任务:\n遍历文件列表 每次遍历就创建一个子进程来执行拷贝任务 线程 进程是分配资源的最小单位. 线程是程序执行的最小单位, 进程分配资源, 线程通过资源来执行程序. 线程自己不拥有系统资源, 同一进程的不同线程可以共享该进程所拥有的资源.\n进程运行时默认会有一个主线程用来执行程序.\nPython 中多线程是一种并发执行任务的方式, 并不是真的并行. 由于全局解释器锁 GIL 的存在，Python 多线程在同一时间只能有一个线程执行.\n线程的创建步骤 导入线程模块\nimport threading 通过线程类创建对象\n\u0026#34;\u0026#34;\u0026#34; arg. target 执行的目标函数名 arg. name 线程名. 默认会按照 thread-1, thread-2...依次递增 arg. group 线程组. 默认为 None \u0026#34;\u0026#34;\u0026#34; t = threading.Thread(target=[目标函数名]) 启动线程对象\nt.start() args 参数的使用 线程传入 args 与进程十分类似:\nt1 = threading.Thread(target=[目标函数名], args=(3,)) t2 = threading.Thread(target=[目标函数名], kwargs={\u0026#34;arg\u0026#34;: 3}) t1.start() t2.start() 主线程和子线程的结束顺序 import threading import time def work(): for i in range(10): time.sleep(0.2) print(\u0026#34;sub thread end\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: t1 = threading.Thread(target=work) t1.start() time.sleep(1) print(\u0026#34;main thread end\u0026#34;) 运行以上代码可以发现结果与进程相似, 主线程会等待子线程运行结束后再结束.\n设置守护进程 和进程的守护进程类似, 线程也可以设置主线程来实现主线程结束后, 所有子线程也都结束.\nt1 = threading.Thread(target=work, daemon=True) ~~# or t1.setDaemon(True)~~ 已废弃 # or t1.daemon = True t1.start() 获取当前线程信息 curr_thread = threading.current_thread() print(curr_thread) 多线程的执行顺序 如果我们创建多个线程执行并打印信息, 可以发现线程的顺序与代码的逻辑顺序不相符.\ndef get_curr_thread(): # funcs... time.sleep(1) curr_thread = threading.current_thread() print(curr_thread) if __name__ == \u0026#34;__main__\u0026#34;: for i in range(5): t = threading.Thread(target=get_curr_thread) t.start() 你会看到类似以下的输出:\n\u0026lt;Thread(Thread-1, started 139676544125744)\u0026gt; \u0026lt;Thread(Thread-4, started 139676544122342)\u0026gt; \u0026lt;Thread(Thread-3, started 139676544124435)\u0026gt; \u0026lt;Thread(Thread-2, started 139676544122213)\u0026gt; \u0026lt;Thread(Thread-2, started 139676544124535)\u0026gt; 可以发现程序并不是按照顺序来执行线程的.\n注意有一个例外, 如果我们去掉代码中的 time.sleep(1)后, 可能就会看到终端打印就是按照1.2.3.4.5的顺序来输出.\n由于函数体非常短、几乎不耗时，所以线程执行得极快.\n在这种情况下，由于线程创建和运行都在主线程中顺序执行，很可能第一个线程还没执行完，第二个就开始执行了，而它们执行体积小、竞争少，导致操作系统顺序调度它们（并不是强制顺序，只是调度碰巧是顺序的）.\n我们可以通过 join() 或者 threading.lock() 来控制并发访问的顺序.\n总结 进程是分配资源的最小单位. 线程是程序执行的最小单位, 进程分配资源, 线程通过资源来执行程序. 线程自己不拥有系统资源, 同一进程的不同线程可以共享该进程所拥有的资源.\n进程运行时默认会有一个主线程用来执行程序.\n多线程和多进程对比 创建进程的资源开销比线程大. 创建主进程的时候所有文件都会加载一遍. 进程是资源分配的基本单位, 线程是 CPU 调度的基本单位. 进程可以充分发挥多核的优点. 线程虽然资源开销小, 但是其为并发执行, 并不是真正的并行(由于全局解释器锁 GIL 的存在，Python 多线程在同一时间只能有一个线程执行.) ","permalink":"https://iuwu98005.github.io/posts/250626-python-thread/","summary":"\u003ch2 id=\"基本概念\"\u003e基本概念\u003c/h2\u003e\n\u003cp\u003e多任务中的并发和并行\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e并发: 一段时间内交替执行任务\u003c/li\u003e\n\u003cli\u003e并行: 一段时间内同时执行多个任务\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"进程\"\u003e进程\u003c/h2\u003e\n\u003cp\u003epython 中可以通过多进程来实现多任务.\u003c/p\u003e\n\u003ch3 id=\"进程的概念\"\u003e进程的概念\u003c/h3\u003e\n\u003cp\u003e进程 (Process) 是操作系统资源分配和调度的基本单位.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# main.py\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efoo1\u003c/span\u003e():\u003cspan style=\"color:#f92672\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efoo2\u003c/span\u003e():\u003cspan style=\"color:#f92672\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efoo1()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efoo2()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在运行 \u003ccode\u003e.py\u003c/code\u003e 文件时, 操作系统会创建一个进程, 依次运行 \u003ccode\u003efoo1\u003c/code\u003e 和 \u003ccode\u003efoo2\u003c/code\u003e 两个方法.\u003c/p\u003e\n\u003ch3 id=\"多进程\"\u003e多进程\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003emain.py\u003c/code\u003e 运行后会创建一个进程, 此时如果再次创建一个进程, 即为子进程. 我们让主进程运行 \u003ccode\u003efoo1\u003c/code\u003e, 让子进程来运行 \u003ccode\u003efoo2\u003c/code\u003e即可提升代码运行的效率.\u003c/p\u003e\n\u003ch3 id=\"进程的创建步骤\"\u003e进程的创建步骤\u003c/h3\u003e\n\u003cp\u003e1.导入进程包\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e multiprocessing\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e2.创建进程对象\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e multiprocessing\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eProcess()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eProcess()\u003c/code\u003e 方法主要有3个参数:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003etarget: 执行的目标函数名(方法名), 如 \u003ccode\u003efoo2\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ename: 进程名, 一般不用设置\u003c/li\u003e\n\u003cli\u003egroup: 进程组, 当前为 \u003ccode\u003eNone\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e3.启动进程\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emp\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003estart()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"进程执行带有参数的任务\"\u003e进程执行带有参数的任务\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eargs\u003c/code\u003e 以元组方式传参\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ekwargs\u003c/code\u003e 以字典方式传参\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efoo1\u003c/span\u003e(argument:int):\u003cspan style=\"color:#f92672\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efoo2\u003c/span\u003e(argument:int):\u003cspan style=\"color:#f92672\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efoo1_process \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e multiprocessing\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eProcess(target\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003efoo1, args\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e,))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efoo1_process\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003estart()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efoo2_process \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e multiprocessing\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eProcess(target\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003efoo2, kwargs\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;argument\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e})\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efoo2_process\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003estart()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"获取进程编号\"\u003e获取进程编号\u003c/h3\u003e\n\u003cp\u003e当程序进程数量越来越多时, 为了更好地对进程进行管理, 就需要知道每个进程的编号\u003c/p\u003e","title":"Python 多线程编程"},{"content":"demo地址：https://github.com/IUWU98005/mai-agent\n📌 简介 本文档将指导你如何将自定义的 MCP 服务（如你在 main.py 中编写的基于 FastMCP 的服务）集成到 Cherry Studio 中，实现本地调试和调用。\nCherry Studio 是一个支持多种 Agent 和工具链插件的开发环境，而 MCP（Modular Command Protocol）是 Cherry Studio 与外部 AI 工具或脚本通信的主要协议。\n🛠️ 环境要求 - Python 3.10+ - 已安装 Cherry Studio - MCP 服务依赖： - pydantic_ai - fastmcp - dotenv - psutil、platform 等标准/常用库 📁 项目结构 确保你的项目大致如下所示：\nproject_root/ │ ├── main.py # MCP 服务主程序 ├── tools.py # 自定义工具函数 ├── .env # 可选的环境变量文件 └── cases/ # 供工具函数使用的目录 MCP 服务核心代码（main.py） from pydantic_ai.agent import AgentRunResult from pydantic_ai.models.gemini import GeminiModel from pydantic_ai import Agent from mcp.server.fastmcp import FastMCP from dotenv import load_dotenv from typing_extensions import NoReturn import tools load_dotenv() mcp = FastMCP(name=\u0026quot;base\u0026quot;) @mcp.tool(tools.get_host_info()) def host(): return \u0026quot;\u0026quot; def agent_run() -\u0026gt; NoReturn: model = GeminiModel(\u0026quot;gemini-2.0-flash\u0026quot;) agent = Agent( model=model, system_prompt=\u0026quot;You are a experienced programmer\u0026quot;, tools=[tools.read_file, tools.list_files, tools.rename_file], ) history: list = [] while True: user_input: str = input(\u0026quot;Input: \u0026quot;) resp: AgentRunResult[str] = agent.run_sync(user_input, message_history=history) history = list(resp.all_messages()) print(resp.output) def main() -\u0026gt; None: mcp.run(transport=\u0026quot;stdio\u0026quot;) if __name__ == \u0026quot;__main__\u0026quot;: main() 通过 json 配置文件添加 MCP 服务器 在 CherryStudio 添加 MCP 服务器, 并选择 从 Json 导入, 配置 json 文件:\n{ \u0026quot;mcpServers\u0026quot;: { \u0026quot;hostInfoMcp\u0026quot;: { \u0026quot;command\u0026quot;: \u0026quot;uv\u0026quot;, \u0026quot;args\u0026quot;: [ \u0026quot;--directory\u0026quot;, \u0026quot;/to_your_mcp_server_path\u0026quot;, \u0026quot;run\u0026quot;, \u0026quot;main.py\u0026quot; ] } } } 如果没有安装过uv, 就先使用管理员模式打开 PowerShell 并输入以下指令:\npowershell -ExecutionPolicy ByPass -c \u0026quot;irm https://astral.sh/uv/install.ps1 | iex\u0026quot; 之后在智能体聊天中选中创建的 MCP 服务器, 即可让智能体使用 MCP 服务器来进行回复.\n","permalink":"https://iuwu98005.github.io/posts/cherrystudio_mcp/","summary":"\u003cp\u003edemo地址：\u003ca href=\"https://github.com/IUWU98005/mai-agent\"\u003ehttps://github.com/IUWU98005/mai-agent\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"-简介\"\u003e📌 简介\u003c/h2\u003e\n\u003cp\u003e本文档将指导你如何将自定义的 MCP 服务（如你在 main.py 中编写的基于 FastMCP 的服务）集成到 Cherry Studio 中，实现本地调试和调用。\u003c/p\u003e\n\u003cp\u003eCherry Studio 是一个支持多种 Agent 和工具链插件的开发环境，而 MCP（Modular Command Protocol）是 Cherry Studio 与外部 AI 工具或脚本通信的主要协议。\u003c/p\u003e\n\u003ch2 id=\"-环境要求\"\u003e🛠️ 环境要求\u003c/h2\u003e\n\u003cpre\u003e\u003ccode\u003e- Python 3.10+\n- 已安装 Cherry Studio\n- MCP 服务依赖：\n    - pydantic_ai\n    - fastmcp\n    - dotenv\n    - psutil、platform 等标准/常用库\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"-项目结构\"\u003e📁 项目结构\u003c/h2\u003e\n\u003cp\u003e确保你的项目大致如下所示：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eproject_root/\n│\n├── main.py          # MCP 服务主程序\n├── tools.py         # 自定义工具函数\n├── .env             # 可选的环境变量文件\n└── cases/           # 供工具函数使用的目录\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"mcp-服务核心代码mainpy\"\u003eMCP 服务核心代码（main.py）\u003c/h2\u003e\n\u003cpre\u003e\u003ccode\u003efrom pydantic_ai.agent import AgentRunResult\nfrom pydantic_ai.models.gemini import GeminiModel\nfrom pydantic_ai import Agent\n\nfrom mcp.server.fastmcp import FastMCP\n\nfrom dotenv import load_dotenv\nfrom typing_extensions import NoReturn\n\nimport tools\n\nload_dotenv()\n\nmcp = FastMCP(name=\u0026quot;base\u0026quot;)\n\n\n@mcp.tool(tools.get_host_info())\ndef host():\n    return \u0026quot;\u0026quot;\n\n\ndef agent_run() -\u0026gt; NoReturn:\n    model = GeminiModel(\u0026quot;gemini-2.0-flash\u0026quot;)\n    agent = Agent(\n        model=model,\n        system_prompt=\u0026quot;You are a experienced programmer\u0026quot;,\n        tools=[tools.read_file, tools.list_files, tools.rename_file],\n    )\n\n    history: list = []\n    while True:\n        user_input: str = input(\u0026quot;Input: \u0026quot;)\n        resp: AgentRunResult[str] = agent.run_sync(user_input, message_history=history)\n        history = list(resp.all_messages())\n        print(resp.output)\n\n\ndef main() -\u0026gt; None:\n    mcp.run(transport=\u0026quot;stdio\u0026quot;)\n\n    if __name__ == \u0026quot;__main__\u0026quot;:\n        main()\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"通过-json-配置文件添加-mcp-服务器\"\u003e通过 json 配置文件添加 MCP 服务器\u003c/h2\u003e\n\u003cp\u003e在 CherryStudio 添加 MCP 服务器, 并选择 \u003ccode\u003e从 Json 导入\u003c/code\u003e, 配置 json 文件:\u003c/p\u003e","title":"在 Cherry Studio 配置本地 MCP 服务"},{"content":"简介 本项目展示如何使用 Python 构建一个简单的文件系统助手程序。该助手可以理解用户的文本输入，调用指定工具函数操作文件，并通过 Gemini 模型进行任务处理。\ndemo地址：https://github.com/IUWU98005/mai-agent\n项目结构 . ├── __init__.py ├── main.py # 程序入口 ├── tools.py # 工具函数模块 └── cases/ # 示例文件目录 ├── a.go ├── b.py ├── c.java └── d.c 环境准备 安装依赖：\npip install pydantic-ai python-dotenv 配置环境变量：在 .env 文件中添加 Gemini API 密钥：\nGEMINI_API_KEY=your_api_key_here 关键模块说明 工具函数（tools.py） 定义了程序可用的基础文件操作：\n# filepath: tools.py def read_file(name: str) -\u0026gt; str: \u0026#34;\u0026#34;\u0026#34;读取指定文件的内容\u0026#34;\u0026#34;\u0026#34; def list_files() -\u0026gt; list[str]: \u0026#34;\u0026#34;\u0026#34;列出目录中的所有文件\u0026#34;\u0026#34;\u0026#34; def rename_file(cur_name: str, new_name: str) -\u0026gt; str: \u0026#34;\u0026#34;\u0026#34;重命名文件\u0026#34;\u0026#34;\u0026#34; 助手初始化（main.py） from pydantic_ai.agent import Agent from pydantic_ai.models.gemini import GeminiModel import tools # 初始化模型 model = GeminiModel(\u0026#34;gemini-2.0-flash\u0026#34;) # 创建助手实例 agent = Agent( model=model, system_prompt=\u0026#34;You are an experienced programmer.\u0026#34;, tools=[tools.read_file, tools.list_files, tools.rename_file], ) 主程序逻辑 def main() -\u0026gt; None: history = [] while True: user_input = input(\u0026#34;Input: \u0026#34;) resp = agent.run_sync(user_input, message_history=history) history = list(resp.all_messages()) print(resp.output) 功能简介 文件管理\n支持读取文件内容\n支持列出目录文件\n支持文件重命名（仅限 cases/ 目录）\n对话上下文\n记录历史对话，实现上下文记忆 安全设计\n文件操作被限定在 cases 目录中\n添加了异常处理机制，提升鲁棒性\n使用示例 查看目录下所有文件：\nInput: 列出所有文件 查看指定文件内容：\nInput: 读取 a.go 的内容 重命名文件：\nInput: 将 a.go 重命名为 new.go ","permalink":"https://iuwu98005.github.io/posts/ai-agent/","summary":"\u003ch2 id=\"简介\"\u003e简介\u003c/h2\u003e\n\u003cp\u003e本项目展示如何使用 Python 构建一个简单的文件系统助手程序。该助手可以理解用户的文本输入，调用指定工具函数操作文件，并通过 Gemini 模型进行任务处理。\u003c/p\u003e\n\u003cp\u003edemo地址：\u003ca href=\"https://github.com/IUWU98005/mai-agent\"\u003ehttps://github.com/IUWU98005/mai-agent\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"项目结构\"\u003e项目结构\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── __init__.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── main.py          \u003cspan style=\"color:#75715e\"\u003e# 程序入口\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── tools.py         \u003cspan style=\"color:#75715e\"\u003e# 工具函数模块\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e└── cases/           \u003cspan style=\"color:#75715e\"\u003e# 示例文件目录\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ├── a.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ├── b.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ├── c.java\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    └── d.c\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"环境准备\"\u003e环境准备\u003c/h2\u003e\n\u003cp\u003e安装依赖：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epip install pydantic-ai python-dotenv\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e配置环境变量：在 \u003ccode\u003e.env\u003c/code\u003e 文件中添加 Gemini API 密钥：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eGEMINI_API_KEY\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eyour_api_key_here\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"关键模块说明\"\u003e关键模块说明\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e工具函数（tools.py）\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e定义了程序可用的基础文件操作：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# filepath: tools.py\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eread_file\u003c/span\u003e(name: str) \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e str:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u0026#34;读取指定文件的内容\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elist_files\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e list[str]:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u0026#34;列出目录中的所有文件\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erename_file\u003c/span\u003e(cur_name: str, new_name: str) \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e str:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u0026#34;重命名文件\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003e助手初始化（main.py）\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e pydantic_ai.agent \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e Agent\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e pydantic_ai.models.gemini \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e GeminiModel\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e tools\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 初始化模型\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emodel \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e GeminiModel(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gemini-2.0-flash\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 创建助手实例\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eagent \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Agent(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    model\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003emodel,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    system_prompt\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;You are an experienced programmer.\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    tools\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e[tools\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eread_file, tools\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003elist_files, tools\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003erename_file],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003e主程序逻辑\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eNone\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    history \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e []\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ewhile\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eTrue\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        user_input \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e input(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Input: \u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        resp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e agent\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003erun_sync(user_input, message_history\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ehistory)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        history \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e list(resp\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eall_messages())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        print(resp\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eoutput)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"功能简介\"\u003e功能简介\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e文件管理\u003c/p\u003e","title":"构建简单的 AI Agent 实战教程"},{"content":"1. Nginx的安装与运行 启动Nginx 切换到nginx目录下:\ncd C:\\nginx 启动nginx:\nstart nginx 验证Nginx是否运行:\n在浏览器访问localhost:8080，会出现Nginx的欢迎页面。 配置Nginx:\n配置文件通常位于conf目录下，名为nginx.conf。 可以通过配置文件设置端口、添加虚拟主机等 重启以应用更改:\nnginx -s reload 停止Nginx: nginx -s stop 请注意, 如果你的系统防火墙开启, 可能需要在防火墙设置中允许nginx使用的端口(默认是80和443).\n2. Nginx的基本命令 nginx -s stop # 关闭 nginx, 可能不保存相关信息, 迅速终止web服务. nginx -s quit # 关闭 nginx, 保存相关信息, 有安排的结束web服务. nginx -s reload # 改变 nginx 相关配置后, 重载 nginx 以应用配置更改. nginx -s reopen # 重新打开日志文件. nginx -c filename # 为 nginx 指定一个配置文件, 用以代替缺省的. nginx -t # 不运行, 仅测试配置文件. nginx 将检查配置文件语法的正确性. nginx -v # 显示 nginx 的版本. nginx -V # 显示 nginx 的版本, 编译器版本和配置参数 3. Nginx配置文件介绍 ","permalink":"https://iuwu98005.github.io/posts/nginx/","summary":"\u003ch1 id=\"1-nginx的安装与运行\"\u003e1. Nginx的安装与运行\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003e启动Nginx\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e切换到nginx目录下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecd C:\u003cspan style=\"color:#ae81ff\"\u003e\\n\u003c/span\u003eginx\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e启动nginx:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003estart nginx\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003e\n\u003cp\u003e验证Nginx是否运行:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在浏览器访问\u003ccode\u003elocalhost:8080\u003c/code\u003e，会出现Nginx的欢迎页面。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e配置Nginx:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e配置文件通常位于\u003ccode\u003econf\u003c/code\u003e目录下，名为\u003ccode\u003enginx.conf\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e可以通过配置文件设置端口、添加虚拟主机等\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e重启以应用更改:\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -s reload\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003e停止Nginx:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -s stop\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意, 如果你的系统防火墙开启, 可能需要在防火墙设置中允许nginx使用的端口(默认是80和443).\u003c/p\u003e\n\u003ch1 id=\"2-nginx的基本命令\"\u003e2. Nginx的基本命令\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -s stop  \u003cspan style=\"color:#75715e\"\u003e# 关闭 nginx, 可能不保存相关信息, 迅速终止web服务.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -s quit  \u003cspan style=\"color:#75715e\"\u003e# 关闭 nginx, 保存相关信息, 有安排的结束web服务.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -s reload  \u003cspan style=\"color:#75715e\"\u003e# 改变 nginx 相关配置后, 重载 nginx 以应用配置更改.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -s reopen  \u003cspan style=\"color:#75715e\"\u003e# 重新打开日志文件.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -c filename  \u003cspan style=\"color:#75715e\"\u003e# 为 nginx 指定一个配置文件, 用以代替缺省的.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -t  \u003cspan style=\"color:#75715e\"\u003e# 不运行, 仅测试配置文件. nginx 将检查配置文件语法的正确性.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -v  \u003cspan style=\"color:#75715e\"\u003e# 显示 nginx 的版本.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enginx -V  \u003cspan style=\"color:#75715e\"\u003e# 显示 nginx 的版本, 编译器版本和配置参数\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"3-nginx配置文件介绍\"\u003e3. Nginx配置文件介绍\u003c/h1\u003e","title":"Nginx"},{"content":"项目地址: https://github.com/Liu-WeiHu/hyprdots/tree/current\nKeybindings Keys Action Super + QAlt + F4 Close focused window Super + Del Kill Hyprland session Super + W Toggle the window between focus and float Super + G Toggle the window between focus and group Alt + Enter Toggle the window between focus and fullscreen Super + L Launch lock screen Super + Shift + F Toggle pin on focused window Super + Backspace Launch logout menu Ctrl + Esc Toggle waybar Super + T Launch terminal emulator (kitty) Super + E Launch file manager (dolphin) Super + C Launch text editor (vscode) Super + F Launch web browser (firefox) Ctrl + Shift + Esc Launch system monitor (htop/btop or fallback to top) Super + A Launch application launcher (rofi) Super + Tab Launch window switcher (rofi) Super + Shift + E Launch file explorer (rofi) F10 Toggle audio mute F11 Decrease volume F12 Increase volume Super + P Partial screenshot capture Super + Ctrl + P Partial screenshot capture (frozen screen) Super + Alt + P Monitor screenshot capture PrtScn All monitors screenshot capture Super + Alt + G Disable hypr effects for gamemode Super + Alt + →← Cycle wallpaper Super + Alt + ↑↓ Cycle waybar mode Super + Shift + R Launch wallbash mode select menu (rofi) Super + Shift + T Launch theme select menu (rofi) Super + Shift + A Launch style select menu (rofi) Super + Shift + W Launch wallpaper select menu (rofi) Super + V Launch clipboard (rofi) Super + K Switch keyboard layout Super + ←→↑↓ Move window focus Alt + Tab Change window focus Super + [0-9] Switch workspaces Super + Ctrl + ←→ Switch workspaces to a relative workspace Super + Ctrl + ↓ Move to the first empty workspace Super + Shift + ←→↑↓ Resize windows Super + Shift + [0-9] Move focused window to a relative workspace Super + Shift + Ctrl + ←→↑↓ Move focused window around the current workspace Super + MouseScroll Scroll through existing workspaces Super + LeftClickSuper + Z Move focused window Super + RightClickSuper + X Resize focused window Super + Alt + S Move/Switch to special workspace (scratchpad) Super + S Toggle to special workspace Super + J Toggle focused window split Super + Alt + [0-9] Move focused window to a workspace silently Super + Ctrl + H Move between grouped windows backward Super + Ctrl + L Move between grouped windows forward ","permalink":"https://iuwu98005.github.io/posts/archlinux-keybind/","summary":"\u003cp\u003e项目地址: \u003ca href=\"https://github.com/Liu-WeiHu/hyprdots/tree/current\"\u003ehttps://github.com/Liu-WeiHu/hyprdots/tree/current\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"keybindings\"\u003eKeybindings\u003c/h2\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003eKeys\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eAction\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eQ\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eF4\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eClose focused window\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eDel\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eKill Hyprland session\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eW\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eToggle the window between focus and float\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eG\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eToggle the window between focus and group\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eEnter\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eToggle the window between focus and fullscreen\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eL\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch lock screen\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eF\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eToggle pin on focused window\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eBackspace\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch logout menu\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eCtrl\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eEsc\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eToggle waybar\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eT\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch terminal emulator (kitty)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eE\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch file manager (dolphin)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eC\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch text editor (vscode)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eF\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch web browser (firefox)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eCtrl\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eEsc\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch system monitor (htop/btop or fallback to top)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eA\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch application launcher (rofi)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eTab\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch window switcher (rofi)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eE\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch file explorer (rofi)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eF10\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eToggle audio mute\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eF11\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eDecrease volume\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eF12\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eIncrease volume\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eP\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ePartial screenshot capture\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eCtrl\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eP\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ePartial screenshot capture (frozen screen)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eP\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMonitor screenshot capture\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003ePrtScn\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eAll monitors screenshot capture\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eG\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eDisable hypr effects for gamemode\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e→\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e←\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eCycle wallpaper\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e↑\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e↓\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eCycle waybar mode\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eR\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch wallbash mode select menu (rofi)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eT\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch theme select menu (rofi)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eA\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch style select menu (rofi)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eW\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch wallpaper select menu (rofi)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eV\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eLaunch clipboard (rofi)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eK\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eSwitch keyboard layout\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e←\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e→\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e↑\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e↓\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove window focus\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eTab\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eChange window focus\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e[0-9]\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eSwitch workspaces\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eCtrl\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e←\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e→\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eSwitch workspaces to a relative workspace\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eCtrl\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e↓\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove to the first empty workspace\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e←\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e→\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e↑\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e↓\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eResize windows\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e[0-9]\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove focused window to a relative workspace\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eCtrl\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e←\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e→\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e↑\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e↓\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove focused window around the current workspace\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eMouseScroll\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eScroll through existing workspaces\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eLeftClick\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eZ\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove focused window\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eRightClick\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eX\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eResize focused window\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eS\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove/Switch to special workspace (scratchpad)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eS\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eToggle to special workspace\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eJ\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eToggle focused window split\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eAlt\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003e[0-9]\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove focused window to a workspace silently\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eCtrl\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eH\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove between grouped windows backward\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c!-- raw HTML omitted --\u003eSuper\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eCtrl\u003c!-- raw HTML omitted --\u003e + \u003c!-- raw HTML omitted --\u003eL\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eMove between grouped windows forward\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Archlinux Keybind"},{"content":"1、更新系统（核心任务） sudo pacman -Syu # 同步仓库并升级所有软件包 2、清理软件包缓存（节省磁盘空间） sudo pacman -Sc # 删除已卸载软件的旧版本缓存 sudo pacman -Scc # 清空所有缓存（谨慎使用，可能导致无法降级软件） 替代工具： paccache -r # 使用 `pacman-contrib` 中的工具保留最近3个版本 3. 检查系统日志（排查潜在问题） journalctl -p 3 -xb # 查看优先级为 ERROR 及以上的日志 journalctl --disk-usage # 检查日志占用的磁盘空间 4. 备份重要数据（防止意外丢失） 手动备份： rsync -avh --progress /path/to/source /path/to/backup 自动备份： timeshift（系统快照） borgbackup（去重加密备份） 5. 检查磁盘健康 sudo smartctl -a /dev/sda # 查看硬盘SMART状态（需安装 `smartmontools`） sudo df -h # 查看磁盘空间使用情况 sudo du -sh ~/Downloads # 检查指定目录占用空间 6. 监控系统资源 htop # 实时查看CPU、内存、进程状态（需安装 `htop`） nvtop # 监控NVIDIA GPU状态（需安装 `nvtop`） iotop # 查看磁盘I/O使用情况（需安装 `iotop`） 7. 检查安全性与异常登录 last -a # 查看最近登录记录 sudo netstat -tulpn | grep LISTEN # 检查开放端口 sudo fail2ban-client status # 查看入侵防护状态（需安装 `fail2ban`） 8. 维护配置文件 清理用户历史文件： rm ~/.bash_history # 慎用！建议使用 `history -c` 仅清理内存中的记录 删除临时文件： rm -rf ~/.cache/* # 清理用户缓存 注意事项 滚动更新的风险：Arch Linux 是滚动发行版，每日更新可能导致依赖冲突，建议：\n定期阅读 Arch News。 使用 downgrade 工具（AUR）降级问题软件包。 自动化工具：\n可通过 systemd timer 或 cron 自动执行清理、备份任务。 根据你的使用场景（如开发、游戏、服务器），可调整任务的优先级。例如：\n开发者：增加 git 仓库备份和编译缓存清理（rm -rf ~/.cache/*）。 桌面用户：关注图形驱动更新（如 nvidia 或 mesa）。 ","permalink":"https://iuwu98005.github.io/posts/archlinux-dailycheck/","summary":"\u003ch3 id=\"1更新系统核心任务\"\u003e\u003cstrong\u003e1、更新系统（核心任务）\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo pacman -Syu   \u003cspan style=\"color:#75715e\"\u003e# 同步仓库并升级所有软件包\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2清理软件包缓存节省磁盘空间\"\u003e\u003cstrong\u003e2、清理软件包缓存（节省磁盘空间）\u003c/strong\u003e\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo pacman -Sc    # 删除已卸载软件的旧版本缓存\nsudo pacman -Scc   # 清空所有缓存（谨慎使用，可能导致无法降级软件）\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e替代工具：\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epaccache -r       # 使用 `pacman-contrib` 中的工具保留最近3个版本\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"3-检查系统日志排查潜在问题\"\u003e\u003cstrong\u003e3. 检查系统日志（排查潜在问题）\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejournalctl -p \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e -xb  \u003cspan style=\"color:#75715e\"\u003e# 查看优先级为 ERROR 及以上的日志\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejournalctl --disk-usage  \u003cspan style=\"color:#75715e\"\u003e# 检查日志占用的磁盘空间\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-备份重要数据防止意外丢失\"\u003e\u003cstrong\u003e4. 备份重要数据（防止意外丢失）\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e手动备份\u003c/strong\u003e：\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ersync -avh --progress /path/to/source /path/to/backup\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e自动备份\u003c/strong\u003e：\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etimeshift\u003c/code\u003e（系统快照）\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eborgbackup\u003c/code\u003e（去重加密备份）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"5-检查磁盘健康\"\u003e\u003cstrong\u003e5. 检查磁盘健康\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo smartctl -a /dev/sda       \u003cspan style=\"color:#75715e\"\u003e# 查看硬盘SMART状态（需安装 `smartmontools`）\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo df -h                      \u003cspan style=\"color:#75715e\"\u003e# 查看磁盘空间使用情况\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo du -sh ~/Downloads         \u003cspan style=\"color:#75715e\"\u003e# 检查指定目录占用空间\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"6-监控系统资源\"\u003e\u003cstrong\u003e6. 监控系统资源\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehtop        \u003cspan style=\"color:#75715e\"\u003e# 实时查看CPU、内存、进程状态（需安装 `htop`）\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003envtop       \u003cspan style=\"color:#75715e\"\u003e# 监控NVIDIA GPU状态（需安装 `nvtop`）\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eiotop       \u003cspan style=\"color:#75715e\"\u003e# 查看磁盘I/O使用情况（需安装 `iotop`）\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"7-检查安全性与异常登录\"\u003e\u003cstrong\u003e7. 检查安全性与异常登录\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elast -a     \u003cspan style=\"color:#75715e\"\u003e# 查看最近登录记录\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo netstat -tulpn | grep LISTEN  \u003cspan style=\"color:#75715e\"\u003e# 检查开放端口\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo fail2ban-client status  \u003cspan style=\"color:#75715e\"\u003e# 查看入侵防护状态（需安装 `fail2ban`）\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"8-维护配置文件\"\u003e\u003cstrong\u003e8. 维护配置文件\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e清理用户历史文件：\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e rm ~/.bash_history  \u003cspan style=\"color:#75715e\"\u003e# 慎用！建议使用 `history -c` 仅清理内存中的记录\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e删除临时文件：\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erm -rf ~/.cache/*   \u003cspan style=\"color:#75715e\"\u003e# 清理用户缓存\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"注意事项\"\u003e\u003cstrong\u003e注意事项\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e滚动更新的风险\u003c/strong\u003e：Arch Linux 是滚动发行版，每日更新可能导致依赖冲突，建议：\u003c/p\u003e","title":"Archlinux Dailycheck"},{"content":"📦 环境准备 确保本地安装了以下工具：\nHugo（建议安装 Hugo extended 版本） Git GitHub 账号 🏗️ 第一步：创建 Hugo 博客项目 hugo new site hugo-blog cd hugo-blog 添加一个主题（推荐 PaperMod）：\ngit submodule add \u0026lt;https://github.com/adityatelange/hugo-PaperMod\u0026gt; themes/PaperMod 修改 hugo.toml 启用主题：\ntheme = \u0026#34;PaperMod\u0026#34; 📝 第二步：配置站点基本信息 hugo.toml 示例配置（兼容 Hugo v0.128+）：\nbaseURL = \u0026#34;https://\u0026lt;your-username\u0026gt;.github.io/\u0026#34; title = \u0026#34;My Awesome Blog\u0026#34; languageCode = \u0026#34;en-us\u0026#34; theme = \u0026#34;PaperMod\u0026#34; [pagination] pagerSize = 10 [params] defaultTheme = \u0026#34;auto\u0026#34; ShowReadingTime = true ShowCodeCopyButtons = true ShowShareButtons = false 📄 第三步：创建文章 hugo new posts/hello-world.md 编辑文章文件并将 draft: true 改为 false。\n🚀 第四步：部署到 GitHub Pages 创建两个仓库：\n内容仓库（源码）：hugo-blog\n页面仓库（部署）：\u0026lt;your-username\u0026gt;.github.io\n页面仓库可为空，GitHub Pages 会托管它的 main 或 gh-pages 分支。\n设置 GitHub Secret（用于跨仓库部署）\n生成Personal Access Token 并勾选以下权限：\nrepo workflow 复制生成的 Token，并将其添加到 hugo-blog 仓库：\nSettings → Secrets and variables → Actions → New repository secret Name：GH_TOKEN Content：粘贴你的 token 添加 GitHub Actions 工作流\n在项目中创建 .github/workflows/deploy.yml：\nname: Deploy Hugo Blog to GitHub Pages on: push: branches: [main] jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout source uses: actions/checkout@v4 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; - name: Build site run: hugo --minify - name: Deploy to GitHub Pages uses: peaceiris/actions-gh-pages@v3 with: external_repository: \u0026lt;your-username\u0026gt;/\u0026lt;your-username\u0026gt;.github.io publish_branch: main publish_dir: ./public personal_token: ${{ secrets.GH_TOKEN }} 🌐 第五步：访问你的博客 部署成功后，访问：\nhttps://\u0026lt;your-username\u0026gt;.github.io/\n后续补充 自定义 Hugo 分页导航 Hugo 使用 config.toml, config.yaml 或 config.json (如果存在于站点根目录) 作为默认站点配置文件。根据Hugo官方文档介绍, 你可以在这些文件中设置分页相关的配置，例如：\n[pagination] # 默认每页显示的条目数 # default = 10 # 允许您在模板中重载此值 # enabled = true # 开启分页功能 # paginatePath = \u0026#34;page\u0026#34; # 分页路径，默认为 \u0026#34;page\u0026#34; 为 Hugo 启用搜索功能(以PaperMod为例) 在 hugo.toml 中启用搜索:\n[params] # ...existing code... fuseOpts = { isCaseSensitive = false, shouldSort = true } ShowSearch = true 配置搜索入口:\n[[menu.main]] identifier = \u0026#34;search\u0026#34; name = \u0026#34;Search\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 4 新建搜索页面:\n+++ title = \u0026#34;Search\u0026#34; layout = \u0026#34;search\u0026#34; url = \u0026#34;/search/\u0026#34; +++ 配置 outputs:\nPaperMod 前端搜索依赖于 /index.json 文件, 需要配置 outputs, hugo 才会为首页生成 index.json\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] ","permalink":"https://iuwu98005.github.io/posts/my-first-post/","summary":"\u003ch2 id=\"-环境准备\"\u003e📦 环境准备\u003c/h2\u003e\n\u003cp\u003e确保本地安装了以下工具：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://gohugo.io/getting-started/installing/\"\u003eHugo\u003c/a\u003e（建议安装 Hugo extended 版本）\u003c/li\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eGitHub 账号\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"-第一步创建-hugo-博客项目\"\u003e🏗️ 第一步：创建 Hugo 博客项目\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site hugo-blog\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecd hugo-blog\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e添加一个主题（推荐 PaperMod）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit submodule add \u0026lt;https://github.com/adityatelange/hugo-PaperMod\u0026gt; themes/PaperMod\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e修改 hugo.toml 启用主题：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etheme \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;PaperMod\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"-第二步配置站点基本信息\"\u003e📝 第二步：配置站点基本信息\u003c/h2\u003e\n\u003cp\u003ehugo.toml 示例配置（兼容 Hugo v0.128+）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebaseURL \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://\u0026lt;your-username\u0026gt;.github.io/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etitle \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;My Awesome Blog\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elanguageCode \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;en-us\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etheme \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;PaperMod\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003epagination\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  pagerSize \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eparams\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  defaultTheme \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;auto\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  ShowReadingTime \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e true\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  ShowCodeCopyButtons \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e true\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  ShowShareButtons \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e false\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"-第三步创建文章\"\u003e📄 第三步：创建文章\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new posts/hello-world.md\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e编辑文章文件并将 draft: true 改为 false。\u003c/p\u003e","title":"Hugo + GitHub Pages 自动部署博客指南"},{"content":"Hi, I\u0026rsquo;m IUWU98005 👋\nWelcome to my personal blog. I\u0026rsquo;m passionate about tech, open source, and building things that work.\n","permalink":"https://iuwu98005.github.io/about/","summary":"\u003cp\u003eHi, I\u0026rsquo;m IUWU98005 👋\u003cbr\u003e\nWelcome to my personal blog. I\u0026rsquo;m passionate about tech, open source, and building things that work.\u003c/p\u003e","title":"About Me"},{"content":"","permalink":"https://iuwu98005.github.io/projects/project-01/","summary":"","title":"智能垃圾分类系统"}]